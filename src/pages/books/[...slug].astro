---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import BuyButton from '../../components/BuyButton.astro';
import { format as formatTZ } from 'date-fns-tz';

export async function getStaticPaths() {
  const books = await getCollection('books');
  return books.map(book => ({
    params: { slug: book.slug },
    props: { book },
  }));
}

const { book } = Astro.props;
const { Content } = await book.render();
---

<Layout title={`${book.data.title} | Chris Berry - Author`}>
  <!-- Book Hero/Header -->
  <section class="w-full mb-12">
    <div class="flex flex-col items-center justify-center py-14 px-4 bg-gradient-to-b from-blue-950/80 via-gray-900/70 to-transparent rounded-2xl shadow-lg">
      <h1 class="font-playfair text-4xl md:text-5xl font-extrabold text-white tracking-tight drop-shadow-xl text-center mb-2 flex items-center justify-center gap-4">
        <span>Introducing</span>
        <span class="text-blue-100 text-3xl font-medium mx-2" style="line-height: 1;">|</span>
        <span class="text-blue-400">{book.data.title}</span>
      </h1>
      <svg class="mt-2 mb-2 w-48 h-6" viewBox="0 0 200 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M10 12 Q60 24 120 12 T190 12" stroke="#60a5fa" stroke-width="6" fill="none" stroke-linecap="round"/>
      </svg>
      <div class="text-lg text-blue-200 font-medium text-center mt-2">by Chris Berry</div>
    </div>
  </section>
  <article class="max-w-4xl mx-auto">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 bg-gray-900/50 p-6 rounded-lg border border-gray-800 mb-8">
      <img
        src={book.data.coverImage}
        alt={`Cover of ${book.data.title}`}
        class="w-full rounded-lg shadow-lg"
      />
      <div class="flex flex-col">
        <div class="mb-6">
          <div class="prose prose-invert max-w-none mb-4">
            <Content />
          </div>
        </div>
        {book.data.reviews && book.data.reviews.length > 0 && (
          <div class="mb-6">
            <h3 class="text-xl font-semibold mb-2 text-blue-300">What Readers Are Saying</h3>
            <ul class="space-y-3">
              {book.data.reviews.map(review => (
                <li class="bg-blue-900/40 border-l-4 border-blue-400 p-4 rounded text-blue-100 italic">{review}</li>
              ))}
            </ul>
          </div>
        )}
        <div class="mb-6">
          <h3 class="text-xl font-semibold mb-2">Book Details</h3>
          <dl class="grid grid-cols-2 gap-2">
            <dt class="text-gray-400">Published</dt>
            <dd>{formatTZ(book.data.publishDate, 'MMMM d, yyyy', { timeZone: 'UTC' })}</dd>
            <dt class="text-gray-400">ISBN</dt>
            <dd>{book.data.isbn}</dd>
            <dt class="text-gray-400">Genre</dt>
            <dd>{book.data.genre.join(', ')}</dd>
          </dl>
        </div>
        <div class="space-x-4 mt-2">
          {book.data.buyLinks.map(link => (
            <BuyButton store={link.store} url={link.url} />
          ))}
        </div>
      </div>
    </div>
  </article>
</Layout>